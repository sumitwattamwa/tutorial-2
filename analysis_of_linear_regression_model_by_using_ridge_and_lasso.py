# -*- coding: utf-8 -*-
"""analysis of linear regression model by using ridge and lasso

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15AN0BQNvrCF_qd4FLBSv1JBKglqzo37G
"""





import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.linear_model import Ridge
from sklearn.linear_model import Lasso
from sklearn.linear_model import ElasticNet
from sklearn.metrics import r2_score
from mpl_toolkits.mplot3d import Axes3D
import statsmodels.api as sm

df=pd.read_csv("/content/student.csv")
df

math=df["Math"].values
statistics=df["Statistics"].values
physics=df["Physics"].values

from matplotlib import legend
fig=plt.figure()
axe=Axes3D(fig)
axe.scatter(math,statistics,physics,color="red")
axe.legend()

x=df[["Math","Statistics"]].values
y=df["Physics"].values

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

reg=LinearRegression()
reg.fit(x,y)

reg.score(x,y)

print(reg.coef_)
print(reg.intercept_)

y_pred=reg.predict(x_test)

dt=pd.DataFrame({"predicted": y_pred,"actual":y_test})
dt

fig=plt.figure()
ax=Axes3D(fig)
ax.scatter(x_train[:,0],x_train[:,0],y_train,color="red")
ax.scatter(x_test[:,0],x_test[:,0],y_pred,color="blue")

x2=sm.add_constant(x)
ord=sm.OLS(y,x2)
model=ord.fit()
print(model.summary())

from sklearn.metrics import mean_squared_error

rr=Ridge(alpha=0.01)
rr.fit(x_train,y_train)
predicted_xtrain_rr=rr.predict(x_train)
print(np.sqrt(mean_squared_error(y_train,predicted_xtrain_rr)))


predicted_xtest_rr=rr.predict(x_test)
print(np.sqrt(mean_squared_error(y_test,predicted_xtest_rr)))

ls=Lasso(alpha=0.01)
ls.fit(x_train,y_train)
predicted_xtrain_ls=ls.predict(x_train)
print(np.sqrt(mean_squared_error(y_train,predicted_xtrain_ls)))

predicted_xtest_ls=ls.predict(x_test)
print(np.sqrt(mean_squared_error(y_test,predicted_xtest_ls)))





